"use strict";(self.webpackChunkmarvel=self.webpackChunkmarvel||[]).push([[682],{354:(e,t,a)=>{a.d(t,{A:()=>n});const s=a.p+"static/media/Avengers.4065c8f9c94e3d8b039a.png",i=a.p+"static/media/Avengers_logo.9eaf219344d83362e830.png";var r=a(579);const n=()=>(0,r.jsxs)("div",{className:"app__banner",children:[(0,r.jsx)("img",{src:s,alt:"Avengers"}),(0,r.jsxs)("div",{className:"app__banner-text",children:["New comics every week!",(0,r.jsx)("br",{}),"Stay tuned!"]}),(0,r.jsx)("img",{src:i,alt:"Avengers logo"})]})},425:(e,t,a)=>{a.d(t,{A:()=>r});const s=a.p+"static/media/error.42292aa12b6bc303ce99.gif";var i=a(579);const r=()=>(0,i.jsx)("img",{style:{display:"block",width:"250px",height:"250px",objectFit:"contain",margin:"0 auto"},src:s,alt:"Error"})},637:(e,t,a)=>{a.r(t),a.d(t,{default:()=>u});var s=a(591),i=a(43),r=a(475),n=a(502),c=a(425),l=a(897),o=a(579);const m=e=>{const[t,a]=(0,i.useState)([]),[s,m]=(0,i.useState)(!1),[d,u]=(0,i.useState)(340),[h,p]=(0,i.useState)(!1),{loading:g,error:b,getAllComics:v}=(0,l.A)();(0,i.useEffect)((()=>{x(d,!0)}),[]);const x=(e,t)=>{m(!t),v(e).then(j)},j=e=>{let t=!1;e.length<8&&(t=!0),a((t=>[...t,...e])),m((e=>!1)),u((e=>e+8)),p((e=>t))};const f=function(e){const t=e.map(((e,t)=>(0,o.jsx)("li",{className:"comics__item",children:(0,o.jsxs)(r.N_,{to:`/comics/${e.id}`,children:[(0,o.jsx)("img",{src:e.thumbnail,alt:e.title,className:"comics__item-img"}),(0,o.jsx)("div",{className:"comics__item-name",children:e.title}),(0,o.jsx)("div",{className:"comics__item-price",children:e.price})]})},e.id)));return(0,o.jsx)("ul",{className:"comics__grid",children:t})}(t),$=b?(0,o.jsx)(c.A,{}):null,_=g&&!s?(0,o.jsx)(n.A,{}):null;return(0,o.jsxs)("div",{className:"comics__list",children:[$,_,f,(0,o.jsx)("button",{className:"button button__main button__long",disabled:s,style:{display:h?"none":"block"},onClick:()=>x(d),children:(0,o.jsx)("div",{className:"inner",children:"load more"})})]})};var d=a(354);const u=()=>(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(s.m,{children:[(0,o.jsx)("meta",{name:"description",content:"Page with last of our comics"}),(0,o.jsx)("title",{children:"Comics page"})]}),(0,o.jsx)(d.A,{}),(0,o.jsx)(m,{})]})},897:(e,t,a)=>{a.d(t,{A:()=>i});var s=a(43);const i=()=>{const{loading:e,request:t,error:a,clearError:i}=(()=>{const[e,t]=(0,s.useState)(!1),[a,i]=(0,s.useState)(null);return{loading:e,request:(0,s.useCallback)((async function(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"GET",s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{"Content-Type":"application/json"};t(!0);try{const i=await fetch(e,{method:a,body:s,headers:r});if(!i.ok)throw new Error(`Could not featch ${e}, status: ${i.status}`);const n=await i.json();return t(!1),n}catch(n){throw t(!1),i(n.message),n}}),[]),error:a,clearError:(0,s.useCallback)((()=>i(null)),[])}})(),r="https://gateway.marvel.com:443/v1/public/",n="apikey=129b3670ad033d82bbeb6ea2a1095d5c",c=e=>({id:e.id,name:e.name,description:e.description?`${e.description.slice(0,210)}...`:"There is no description for this character",thumbnail:e.thumbnail.path+"."+e.thumbnail.extension,homepage:e.urls[0].url,wiki:e.urls[1].url,comics:e.comics.items}),l=e=>{var t;return{id:e.id,title:e.title,description:e.description||"There is no description",pageCount:e.pageCount?`${e.pageCount} p.`:"No information about the number of pages",thumbnail:e.thumbnail.path+"."+e.thumbnail.extension,language:(null===(t=e.textObjects[0])||void 0===t?void 0:t.language)||"en-us",price:e.prices[0].price?`${e.prices[0].price}$`:"not available",homepage:e.urls[0].url}};return{loading:e,error:a,clearError:i,getAllCharacters:async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:650;return(await t(`${r}characters?limit=9&offset=${e}&${n}`)).data.results.map(c)},getCharacterByName:async e=>(await t(`${r}characters?name=${e}&${n}`)).data.results.map(c),getCharacter:async e=>{const a=await t(`${r}characters/${e}?${n}`);return c(a.data.results[0])},getAllComics:async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:340;return(await t(`${r}comics?limit=8&offset=${e}&${n}`)).data.results.map(l)},getComic:async e=>{const a=await t(`${r}comics/${e}?${n}`);return l(a.data.results[0])}}}}}]);
//# sourceMappingURL=682.a97ee3c8.chunk.js.map